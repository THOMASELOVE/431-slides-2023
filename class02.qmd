---
title: "431 Class 02"
author: Thomas E. Love, Ph.D.
date: "2023-08-31"
format:
  revealjs: 
    theme: default
    self-contained: true
    slide-number: true
    footnotes-hover: true
    preview-links: auto
    date-format: iso
    logo: 431-2023-pic.png
    footer: "431 Class 02 | 2023-08-31 | <https://thomaselove.github.io/431-2023/>"
---

## Instructions for the Quick Survey

Please read these instructions **before** writing.

1.  Introduce yourself to someone that you don't know.
2.  Record the survey answers **for that other person**, while they record your responses.
3.  Be sure to complete all 15 questions (both sides.)
4.  When you are finished, thank your partner and raise your hand. Someone will come to collect your survey.

Regarding Question 4, Professor Love is the large fellow standing in the front of the room.

## Today's Agenda

-   Data Structures and Variables
    -   Evaluating some of the Quick Survey variables
-   Looking at some of the data collected in Class 01
    -   Guessing Dr. Love's Age (twice)
    -   Group Guessing of Ages from 10 Photographs
-   What to work on this weekend

::: aside
Version `r Sys.time()`
:::

## Chatfield's Six Rules for Data Analysis

1.  Do not attempt to analyze the data until you understand what is being measured and why.
2.  Find out how the data were collected.
3.  Look at the structure of the data.
4.  Carefully examine the data in an exploratory way, before attempting a more sophisticated analysis.
5.  Use your common sense at all times.
6.  Report the results in a clear, self-explanatory way.

::: aside
Chatfield, Chris (1996) *Problem Solving: A Statistician's Guide*, 2nd ed.
:::

## Our Quick Survey

![](c02/images/survey_form.png)

## Types of Data

The key distinction we'll make is between

-   **quantitative** (numerical) and
-   **categorical** (qualitative) information.

Information that is quantitative describes a **quantity**.

-   All quantitative variables have units of measurement.
-   Quantitative variables are recorded in numbers, and we use them as numbers (for instance, taking a mean of the variable makes some sense.)

## Continuous vs. Discrete Quantities

**Continuous** variables (can take any value in a range) vs. **Discrete** variables (limited set of potential values)

-   Is Height a continuous or a discrete variable?

::: incremental
-   Height is certainly continuous as a concept, but how precise is our ruler?
-   Piano vs. Violin
:::

## Quantitative Variable Subtypes

We can also distinguish **interval** (equal distance between values, but zero point is arbitrary) from **ratio** variables (meaningful zero point.)

::: incremental
-   Is Weight an interval or ratio variable?
-   How about IQ?
:::

## Qualitative (Categorical) Data

Qualitative variables consist of names of categories.

-   Each possible value is a code for a category (could use numerical or non-numerical codes.)
    -   **Binary** categorical variables (two categories, often labeled 1 or 0)
    -   **Multi-categorical** variables (three or more categories)
-   Can distinguish *nominal* (no underlying order) vs. *ordinal* (categories are ordered.)

## Some Categorical Variables

-   How is your overall health? <br /> (Excellent, Very Good, Good, Fair, Poor)
-   Which candidate would you vote for if the election were held today?
-   Did this patient receive this procedure?
-   If you needed to analyze a small data set right away, which of the following software tools would you be comfortable using to accomplish that task?

## Are these quantitative or categorical?

1.  Do you **smoke**? (1 = Non-, 2 = Former, 3 = Smoker)
2.  How much did you pay for your most recent **haircut**? (in \$)
3.  What is your favorite **color**?
4.  How many hours did you **sleep** last night?
5.  Statistical thinking in your future **career**? (1 = Not at all important to 7 = Extremely important)

-   If quantitative, are they *discrete* or *continuous*? Do they have a meaningful *zero point*?
-   If categorical, how many categories? *Nominal* or *ordinal*?

## Importing and Tidying Data

![](c02/images/data-science-emphasize-import-and-tidy.PNG)

## Ingesting the Quick Surveys

![](c02/images/2019_setup.png)

## The Quick Survey

315 people took (essentially) the same survey in the same way.

| Fall | 2019 | 2018 | 2017 | 2016 | 2015 | 2014 |   Total |
|-----:|-----:|-----:|-----:|-----:|-----:|-----:|--------:|
|  *n* |   61 |   51 |   48 |   64 |   49 |   42 | **315** |

### Question

About how many of those 315 surveys caused *no problems* in recording responses?

## The 15 Survey Items

|  \# | Topic          |  \# | Topic                    |
|----:|----------------|----:|--------------------------|
|  Q1 | `glasses`      |  Q9 | `lectures_vs_activities` |
|  Q2 | `english`      | Q10 | `projects_alone`         |
|  Q3 | `stats_so_far` | Q11 | `height`                 |
|  Q4 | `guess_TL_ht`  | Q12 | `hand_span`              |
|  Q5 | `smoke`        | Q13 | `color`                  |
|  Q6 | `handedness`   | Q14 | `sleep`                  |
|  Q7 | `stats_future` | Q15 | `pulse_rate`             |
|  Q8 | `haircut`      |  \- | \-                       |

-   At one time, I asked about `sex` rather than `glasses`.
-   In prior years, people guessed my age, rather than height here.
-   Sometimes, I've asked for a 30-second pulse check, then doubled.

## Response to the Question I asked

About how many of those 315 surveys caused *no problems* in recording responses?

> -   Guesses?

> -   110/315 (35%) caused no problems.

## Guess My Age

![](c02/images/q04a.png)

![](c02/images/q04b.png)

![](c02/images/q04c.png)

What should we do in these cases?

## English best language?

![](c02/images/q02a.png)

![](c02/images/q02b.png)

![](c02/images/q02c.png)

## Height

![](c02/images/q11-issues.png)

## Handedness Scale (2016-21 version)

![](c02/images/q06b.png)

## Favorite color

![](c02/images/q13a.png)

![](c02/images/q13b.png)

![](c02/images/q13c.png)

## Following the Rules?

![](c02/images/q15a.png)

### 2019 `pulse` responses, sorted (*n* = 61, 1 NA)

```         
 33 46 48  56  60  60    3 | 3
 62 63 65  65  66  66    4 | 68
 68 68 68  69  70  70    5 | 6
 70 70 70  70  70  70    6 | 002355668889        
 71 72 72  74  74  74    7 | 00000000122444445666888
 74 74 75  76  76  76    8 | 000012445668
 78 78 78  80  80  80    9 | 000046
 80 81 82  84  84  85   10 | 44
 86 86 88  90  90  90   11 | 0
 90 94 96 104 104 110 
```

## Stem and Leaf: Pulse Rates 2014-2019

![](c02/images/2014-2019_q08_pulse_stem.png)

(Thanks, John \color{red} **Tukey** \color{black})

## Garbage in, garbage out ...

![](c02/images/lastlineofdefense.png)

# Guessing My Age (Twice) <br /> from Class 01

## The R Packages I'll Load Today

```{r}
#| echo: true
#| message: false

library(janitor)
library(tidyverse)

knitr::opts_chunk$set(comment = NA)
```

-   If you actually run this in R, you will get some messages which we will suppress and ignore today.

## From our 431-Data Page: A `.csv` file

I've placed `class01_age_guesses_2022-2023.csv` on our 431-data page. This includes guesses from 2022 and 2023.

![](c02/images/age_guess_sheet.png)

## Creating the `age_guess` Tibble

Clicking on RAW in the 431-data presentation takes us to a (long) URL that contains the raw data in this sheet.

I'll read in the sheet's data to a new tibble (a special kind of R data frame) called `age_guess` using the `read_csv()` function. 

```{r}
#| echo: true

url_age <- 
  "https://raw.githubusercontent.com/THOMASELOVE/431-data/main/data-and-code/class01_age_guesses_2022-2023.csv"

age_guess <- read_csv(url_age, show_col_types = FALSE)
```

## The `age_guess` tibble

What do we get?

```{r}
#| echo: true

age_guess
```

## How many guesses in each year?

```{r}
#| echo: true

age_guess |> count(year)
```


How many first guesses in each year were less than 56?

```{r}
#| echo: true

age_guess |> count(year, guess1 < 56)
```


## What do the `guess1` values look like?

```{r}
#| echo: true
age_guess |> 
  select(guess1) |> 
  arrange(guess1) 
```

## Plot the `guess1` values?

```{r}
#| echo: true
#| output-location: column
ggplot(data = age_guess, 
       aes(x = guess1)) +
  geom_dotplot(binwidth = 1)
```

## Can we make a histogram?

```{r}
#| echo: true
#| output-location: column
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram()
```

## Improving the Histogram, 1

```{r}
#| echo: true
#| output-location: column
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(bins = 10) 
```

## Improving the Histogram, 2

```{r}
#| echo: true
#| output-location: column
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(bins = 10, 
        col = "yellow")
```

## Improving the Histogram, 3

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(bins = 10, 
       col = "white", 
       fill = "blue")
```

## Improving the Histogram, 4

Change theme, specify bin width rather than number of bins

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(binwidth = 2, 
       col = "white", fill = "blue") +
  theme_bw()
```

## Improving the Histogram, 5

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(binwidth = 2, 
       col = "white", fill = "blue") +
  theme_bw() +
  labs(
    x = "First Guess of Dr. Love's Age",
    y = "Fall 2022 431 students")
```

## Add title and subtitle (ver. 6)

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(binwidth = 2, 
       col = "white", fill = "blue") +
  theme_bw() +
  labs(
    x = "First Guess of Dr. Love's Age",
    y = "Fall 2022 and 2023 431 students",
    title = "Pretty wide range of guesses",
    subtitle = "Dr. Love's Actual Age = 55.5 in 2022, 56.5 in 2023")
```

## Improving the Histogram, 7

Add a vertical line at 56 years to show my actual age.

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1)) +
  geom_histogram(binwidth = 2, 
       col = "white", fill = "blue") +
  geom_vline(aes(xintercept = 56), col = "red") +
  theme_bw() +
  labs(
    x = "First Guess of Dr. Love's Age",
    y = "Fall 2022 and 2023 431 students",
    title = "Pretty wide range of guesses",
    subtitle = "Dr. Love's Actual Age = 55.5 in 2022, 56.5 in 2023")
```


## In which year did I look older?

Create two *facets*, one for 2022 and one for 2023 guesses...

```{r}
#| echo: true
#| output-location: slide
ggplot(age_guess, 
       aes(x = guess1, fill = factor(year))) +
  geom_histogram(binwidth = 2, col = "white") +
  theme_bw() +
  facet_grid(year ~ .) +
  labs(
    x = "First Guess of Dr. Love's Age",
    y = "# of Students",
    title = "Distribution of guesses is a bit older in 2023",
    subtitle = "Dr. Love's Actual Age = 55.5 in 2022, 56.5 in 2023")
```

## Numerical Summary 

```{r}
#| echo: true
age_guess |> select(student, guess1, guess2, year) |> summary()
```

> -   Was the average guess closer on guess 1 or 2?
> -   What was the range of first guesses? Second guesses?
> -   What does the `NA's : 3` mean in `guess2`?
> -   Why is `student` not summarized any further?

## More Numerical Summaries

-   Using the `favstats` function from the `mosaic` package

```{r}
#| echo: true
#| message: false
mosaic::favstats(~ guess1, data = age_guess)
mosaic::favstats(~ guess2, data = age_guess)
```

-   Using the `describe` function from the `psych` package

```{r}
#| echo: true
#| message: false

age_guess |>
  select(guess1, guess2) |>
  psych::describe()
```

## How did guesses change in 2023?

-   Did your guesses decrease / stay the same / increase?
-   Calculate guess2 - guess1 and examine its sign.

```{r}
#| echo: true
age_guess |> 
  filter(year == "2023") |>
  count(sign(guess2 - guess1))
```

## How much did guesses change in 2023?

Create new variable (change = guess2 - guess1)

```{r}
#| echo: true
age_guess <- age_guess |>
  mutate(change = guess2 - guess1)

age_guess |> filter(year == "2023") |> select(change) |> summary()
```

## Histogram of Guess Changes

What will this look like?

```{r}
#| echo: true
#| warning: false
#| message: false
#| output-location: slide
ggplot(data = age_guess, aes(x = change)) +
  geom_histogram(binwidth = 1, fill = "royalblue", col = "yellow") + 
  theme_bw() +
  labs(x = "Change from first to second guess",
       y = "Students in 431 for Fall 2022 or 2023",
       title = "Most stayed close to their first guess.")
```


## Guess 1 - Guess 2 Scatterplot

```{r}
#| echo: true
ggplot(data = age_guess, aes(x = guess1, y = guess2)) +
  geom_point() 
```

## Filter to complete cases, and add regression line

```{r}
#| echo: true
#| output-location: slide
temp <- age_guess |>
  filter(complete.cases(guess1, guess2))

ggplot(data = temp, aes(x = guess1, y = guess2)) +
  geom_point() +
  geom_smooth(method = "lm", formula = y ~ x, col = "purple")
```

## What is that regression line?

```{r}
lm(guess2 ~ guess1, data = age_guess)
```

-   Note that `lm` filters to complete cases by default.

## How about a loess smooth curve?

```{r}
#| echo: true
#| output-location: slide
temp <- age_guess |>
  filter(complete.cases(guess1, guess2))

ggplot(data = temp, aes(x = guess1, y = guess2)) +
  geom_point() +
  geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
  theme_bw()
```

## Add y = x line (no change in guess)?

```{r}
#| echo: true
#| output-location: slide
temp <- age_guess |>
  filter(complete.cases(guess1, guess2))

ggplot(data = temp, aes(x = guess1, y = guess2)) +
  geom_point() +
  geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
  geom_abline(intercept = 0, slope = 1, col = "red") +
  theme_bw()
```

## With Better Labels

```{r}
#| echo: true
#| output-location: slide

ggplot(data = temp, aes(x = guess1, y = guess2)) +
  geom_point() +
  geom_smooth(method = "loess", formula = y ~ x, col = "blue") +
  geom_abline(intercept = 0, slope = 1, col = "red") +
  geom_text(x = 40, y = 38, label = "y = x", col = "red") +
  labs(x = "First Guess of Love's Age",
       y = "Second Guess of Love's Age",
       title = "Student Guesses of Dr. Love's Age in 2022 and 2023",
       subtitle = "Love's actual age = 55.5 in 2022, 56.5 in 2023") +
  theme_bw()
```


# Age Guessing from Photos <br /> (9 groups, 10 Photos)

## Photos 1-5

![](c02/images/photos_2023_1_5.png)

-   Data in `class01-guess10ages-2023-08-29` Google Sheet on our Shared Drive.

## Photos 6-10

![](c02/images/photos_2023_6_10.png)

## Comparing the 2023 Groups {.smaller}

| Group | Correct | Within 2 | Within 5 | Too Low | Too High | |
|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|:-----:|
| \< 0.05 | 2 | 3 | 6 | 3 | 5 | |
| Complexity | 2 | 3 | 6 | 5 | 3 | |
| Mini UN | 0 | 3 | 6 | 3 | 7 | |
| Soon to be R Masters | 0 | 3 | 5 | 5 | 5 | |
| KAPSY | 0 | 2 | 6 | 4 | 6 | |
| R Amateurs | 0 | 2 | 5 | 4 | 6 | |
| Stats R Fun! | 0 | 2 | 4 | 4 | 6 | |
| How old R You | 0 | 1 | 6 | 3 | 7 | |
| Outliers | 0 | 1 | 5 | 4 | 6 | |

-   So ... who wins?
-   What other summaries might be helpful?

## Summaries of Errors {.smaller}

| Group | Mean Error | SD (Errors) | Median Error | (Min, Max) Error |
|:----------:|:--------:|:--------:|:--------:|:--------:|
| KAPSY | -0.1 | 7.8 | 1.5 | (-13, 11) |
| Stats R Fun! | -0.2 | 6.3 | 2 | (-9, 7) |
| Outliers | 0.4 | 6.9 | 3.5 | (-12, 8) |
| Soon to be R Masters | 0.7 | 6.1 | 0.5 | (-9, 8) |
| R Amateurs | 1.4 | 8.6 | 2 | (-14, 12) |
| Complexity | -1.7 | 6.5 | -1 | (-15, 6) |
| \< 0.05 | 1.8 | 7.4 | 1 | (-12, 12) |
| Mini UN | 2.4 | 6.8 | 2.5 | (-10, 14) |
| How Old R You | 2.7 | 5.6 | 3.5 | (-8, 10) |

-   How helpful are these summaries in this setting?

## Absolute and Squared Errors {.smaller}

-   **AE** = Absolute Value of Error = \|guess - actual\|, **MSE** = Mean Squared Error

|        Group         | Mean AE | Range (AE) | Median AE |  MSE |
|:--------------------:|--------:|:----------:|----------:|-----:|
|      Complexity      |     4.9 |  (0, 15)   |       4.5 | 41.5 |
| Soon to be R Masters |     5.1 |   (1, 9)   |       5.5 | 34.1 |
|    How Old R You     |     5.3 |  (2, 10)   |       4.5 | 35.3 |
|     Stats R Fun!     |     5.4 |   (2, 9)   |         6 | 35.8 |
|       \< 0.05        |     5.6 |  (0, 12)   |       3.5 | 52.8 |
|       Mini UN        |     5.6 |  (1, 14)   |         4 | 47.6 |
|       Outliers       |     6.0 |  (2, 12)   |       5.5 | 43.6 |
|        KAPSY         |     6.3 |  (1, 13)   |       4.5 | 54.9 |
|      R Amateurs      |     6.8 |  (1, 14)   |         6 | 69.2 |

-   So ... now who wins?

## Importing guesses from 2014-2023

```{r}
#| echo: true

temp_url <- "https://raw.githubusercontent.com/THOMASELOVE/431-data/main/data-and-code/class01-photo-age-history-2023.csv"

photos <- read_csv(temp_url, show_col_types = F)

photos
```

## 2014-2023 Errors

The large black "X"s in the plot show 2023 results.

```{r}
#| echo: false
ggplot(photos |> filter(year != "robot" & year != "2023"), aes(x = label, y = error)) +
  geom_point(aes(col = year, fill = year), size = 3) +
  geom_point(data = photos |> filter(year == "2023"), aes(x = label, y = error), col = "black", shape = "X", size = 7) +
  geom_hline(yintercept = 0) +
  theme(axis.text = element_text(size = 14),
        axis.title = element_text(size = 14, face = "bold"),
        legend.text = element_text(size = 12),
        legend.title = element_text(size = 12, face = "bold")) +
  labs(x = "") +
  theme_light()
```

# OK. That's it for the slides. Back to the Class 02 README.